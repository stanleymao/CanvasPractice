<Window
    x:Class="CanvasPractice.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:CanvasPractice.Common"
    xmlns:converter="clr-namespace:CanvasPractice.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:CanvasPractice.Model"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Title="CanvasPractice"
    Width="800"
    Height="600"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Style/Button.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:MouseButtonEventArgsToPointConverter x:Key="MouseButtonEventArgsToPointConverter" />
            <converter:EqualityConverter x:Key="EqualityConverter" />

            <common:BindingProxy x:Key="Proxy" Data="{Binding}" />

            <ObjectDataProvider
                x:Key="UXModes"
                MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:UXMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ControlTemplate x:Key="ThumbControlTemplate">
                <Rectangle
                    Width="9"
                    Height="9"
                    Fill="Black"
                    Stroke="Gray"
                    StrokeThickness="1" />
            </ControlTemplate>

        </ResourceDictionary>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding EraseShapeCommand}" />
    </Window.InputBindings>
    <Grid Background="DarkRed">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Column="0"
            Background="#80000000"
            Orientation="Horizontal">
            <StackPanel.Resources>
                <Style BasedOn="{StaticResource ButtonStyle1}" TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="Background" Value="#00000000" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF888888" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="VerticalSeparator" TargetType="{x:Type Rectangle}">
                    <Setter Property="Margin" Value="0,8" />
                    <Setter Property="Fill" Value="Gray" />
                    <Setter Property="Width" Value="1" />
                </Style>
            </StackPanel.Resources>
            <Button ToolTip="New File">
                <Image>
                    <Image.Source>
                        <BitmapImage UriSource="pack://application:,,,/Resource/file_new.ico" />
                    </Image.Source>
                </Image>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding NewFileCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button ToolTip="Open File">
                <Image>
                    <Image.Source>
                        <BitmapImage UriSource="pack://application:,,,/Resource/file_open.ico" />
                    </Image.Source>
                </Image>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding OpenFileCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button ToolTip="Save File">
                <Image>
                    <Image.Source>
                        <BitmapImage UriSource="pack://application:,,,/Resource/file_save.ico" />
                    </Image.Source>
                </Image>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding SaveFileCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <!--<Rectangle Style="{StaticResource VerticalSeparator}" />-->
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{Binding Source={StaticResource UXModes}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="GridRoot" Background="#80000000">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button
                                x:Name="ButtonContent"
                                Padding="5"
                                Background="Black"
                                BorderThickness="0"
                                Content="{Binding}"
                                Cursor="Hand"
                                FontSize="16"
                                Foreground="White"
                                Style="{StaticResource ButtonStyle1}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding Data.ChangeUXModeCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Rectangle
                                x:Name="UnderlineRectangle"
                                Grid.Row="1"
                                Height="4"
                                Fill="Red" />
                            <Viewbox
                                x:Name="IndicatorViewbox"
                                Grid.Row="2"
                                Height="8">
                                <Path Data="M0 0 L10 0 L5 5 Z" Fill="Red" />
                            </Viewbox>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                                        <Binding />
                                        <Binding Path="Data.SelectedUXMode" Source="{StaticResource Proxy}" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter TargetName="ButtonContent" Property="Background" Value="Dimgray" />
                                <Setter TargetName="UnderlineRectangle" Property="Opacity" Value="0.6" />
                                <Setter TargetName="IndicatorViewbox" Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <Trigger SourceName="GridRoot" Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonContent" Property="Opacity" Value="0.8" />
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <StackPanel Orientation="Vertical">

                <StackPanel.Resources>
                    <ItemsPanelTemplate x:Key="SubSettingGrid">
                        <UniformGrid Columns="2" />
                    </ItemsPanelTemplate>

                    <Style x:Key="SubMenuItemsControlStyle" TargetType="{x:Type ItemsControl}">
                        <Setter Property="ItemsPanel" Value="{Binding Source={StaticResource SubSettingGrid}}" />
                        <Setter Property="Background" Value="#80000000" />
                        <Setter Property="Height" Value="60" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                    </Style>

                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>

                    <Style
                        x:Key="SubMenuButtonStyle"
                        BasedOn="{StaticResource ButtonStyle1}"
                        TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#80000000" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Foreground" Value="PaleGoldenrod" />
                    </Style>

                </StackPanel.Resources>

                <StackPanel Orientation="Vertical">

                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedUXMode}" Value="{x:Static model:UXMode.Erase}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <!--  Shape Type  -->
                    <ItemsControl>
                        <ItemsControl.Style>
                            <Style BasedOn="{StaticResource SubMenuItemsControlStyle}" TargetType="{x:Type ItemsControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedUXMode}" Value="{x:Static model:UXMode.Select}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                        <TextBlock VerticalAlignment="Center" Text="Shape Type" />
                        <Button
                            x:Name="SelectShapeButton"
                            Click="SelectShapeButton_Click"
                            Style="{StaticResource SubMenuButtonStyle}">
                            <Button.Content>
                                <Viewbox>
                                    <Path
                                        x:Name="IconPath"
                                        Margin="4"
                                        Data="{Binding SelectedShapeType.Icon2}"
                                        Stroke="Wheat"
                                        StrokeThickness="4" />
                                </Viewbox>
                            </Button.Content>
                        </Button>
                        <Popup
                            x:Name="ShapePopup"
                            AllowsTransparency="True"
                            Placement="Right"
                            PlacementTarget="{Binding ElementName=SelectShapeButton}"
                            PopupAnimation="Fade"
                            StaysOpen="False">
                            <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{Binding ShapeTypes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <ItemContainerTemplate>
                                        <Border BorderThickness="0">
                                            <Button
                                                x:Name="SelectShapeTypeInternalButton"
                                                Padding="0"
                                                HorizontalAlignment="Stretch"
                                                Background="Black"
                                                Click="SelectShapeTypeInternalButton_Click"
                                                Cursor="Hand"
                                                Foreground="White"
                                                Style="{StaticResource ButtonStyle1}">
                                                <Grid x:Name="GridRoot">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" SharedSizeGroup="Icon" />
                                                        <ColumnDefinition Width="2*" SharedSizeGroup="Desc" />
                                                    </Grid.ColumnDefinitions>
                                                    <Rectangle Grid.ColumnSpan="2" Fill="Black" />
                                                    <Viewbox Height="48">
                                                        <Path
                                                            x:Name="IconPath"
                                                            Margin="8"
                                                            Data="{Binding Icon2}"
                                                            Stroke="Wheat"
                                                            StrokeThickness="4" />
                                                    </Viewbox>
                                                    <TextBlock
                                                        x:Name="DecriptionTextBlock"
                                                        Grid.Column="1"
                                                        Margin="4"
                                                        VerticalAlignment="Center"
                                                        FontSize="16"
                                                        Text="{Binding Code}" />
                                                </Grid>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding Data.ChangeShapeTypeCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Button>
                                        </Border>
                                        <ItemContainerTemplate.Triggers>
                                            <DataTrigger Value="False">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                        <Binding />
                                                        <Binding Path="Data.SelectedShapeType" Source="{StaticResource Proxy}" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter TargetName="GridRoot" Property="Opacity" Value="0.6" />
                                            </DataTrigger>
                                            <Trigger SourceName="GridRoot" Property="IsMouseOver" Value="True">
                                                <Setter TargetName="GridRoot" Property="Opacity" Value="0.8" />
                                            </Trigger>
                                        </ItemContainerTemplate.Triggers>
                                    </ItemContainerTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Popup>
                    </ItemsControl>

                    <!--  Select Mode Description  -->
                    <ItemsControl>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Style>
                            <Style BasedOn="{StaticResource SubMenuItemsControlStyle}" TargetType="{x:Type ItemsControl}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedUXMode}" Value="{x:Static model:UXMode.Select}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                        <TextBlock
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Center"
                            Text="Select a graph on Canvas to change attributes below."
                            TextWrapping="Wrap" />
                    </ItemsControl>

                    <StackPanel Orientation="Vertical">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SelectedUXMode}" Value="{x:Static model:UXMode.Select}" />
                                            <Condition Binding="{Binding CurrentFocusedShapeId}" Value="{x:Null}" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Opacity" Value="0.3" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <!--  Fill  -->
                        <ItemsControl Style="{StaticResource SubMenuItemsControlStyle}">
                            <TextBlock VerticalAlignment="Center" Text="Fill" />
                            <Button
                                x:Name="SelectFillButton"
                                Background="{Binding SelectedFill.Value}"
                                Click="SelectFillButton_Click"
                                Foreground="PaleGoldenrod"
                                Style="{StaticResource SubMenuButtonStyle}" />
                            <Popup
                                x:Name="PalettePopup"
                                AllowsTransparency="True"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=SelectFillButton}"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                <ItemsControl ItemsSource="{Binding PaletteColors}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Width="180" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <ItemContainerTemplate>
                                            <Border BorderBrush="Gray" BorderThickness="1">
                                                <Grid Width="15" Height="15">
                                                    <Button
                                                        x:Name="SelectFillInternalButton"
                                                        common:ClosePopupBehaviorService.CloseOnClick="True"
                                                        Background="{Binding Value}"
                                                        BorderThickness="0"
                                                        Click="SelectFillInternalButton_Click"
                                                        Cursor="Hand"
                                                        Style="{StaticResource ButtonStyle1}"
                                                        ToolTip="{Binding Key}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <i:InvokeCommandAction Command="{Binding Data.ChangeFillCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                </Grid>
                                            </Border>
                                        </ItemContainerTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Popup>
                        </ItemsControl>

                        <!--  Stroke Thickness  -->
                        <ItemsControl Style="{StaticResource SubMenuItemsControlStyle}">
                            <TextBlock VerticalAlignment="Center" Text="Stroke Thickness" />
                            <Button
                                x:Name="SelectStrokeThicknessButton"
                                Click="SelectStrokeThicknessButton_Click"
                                Style="{StaticResource SubMenuButtonStyle}">
                                <Button.Content>
                                    <Rectangle
                                        Width="50"
                                        Height="{Binding SelectedStrokeThickness}"
                                        Margin="8"
                                        Fill="Wheat" />
                                    <!--<TextBlock Foreground="Red" Text="{Binding SelectedStrokeThickness}" />-->
                                </Button.Content>
                            </Button>
                            <Popup
                                x:Name="StrokeThicknessPopup"
                                AllowsTransparency="True"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=SelectStrokeThicknessButton}"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{Binding Thicknesses}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <ItemContainerTemplate>
                                            <Border BorderThickness="0">
                                                <Button
                                                    x:Name="SelectStrokeThicknessInternalButton"
                                                    Padding="0"
                                                    HorizontalAlignment="Stretch"
                                                    Background="Black"
                                                    Click="SelectStrokeThicknessInternalButton_Click"
                                                    Cursor="Hand"
                                                    Foreground="White"
                                                    Style="{StaticResource ButtonStyle1}">
                                                    <Grid x:Name="GridRoot">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="90" SharedSizeGroup="Icon" />
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Desc" />
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Grid.ColumnSpan="2" Fill="Black" />
                                                        <Rectangle
                                                            Height="{Binding}"
                                                            Margin="8"
                                                            Fill="Wheat" />
                                                        <TextBlock
                                                            x:Name="DecriptionTextBlock"
                                                            Grid.Column="1"
                                                            Margin="4"
                                                            VerticalAlignment="Center"
                                                            Text="{Binding StringFormat='{}{0} Px'}" />
                                                    </Grid>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <i:InvokeCommandAction Command="{Binding Data.ChangeStrokeThicknessCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                            </Border>
                                            <ItemContainerTemplate.Triggers>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                            <Binding />
                                                            <Binding Path="Data.SelectedStrokeThickness" Source="{StaticResource Proxy}" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter TargetName="GridRoot" Property="Opacity" Value="0.6" />
                                                </DataTrigger>
                                                <Trigger SourceName="GridRoot" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="GridRoot" Property="Opacity" Value="0.8" />
                                                </Trigger>
                                            </ItemContainerTemplate.Triggers>
                                        </ItemContainerTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Popup>
                        </ItemsControl>

                        <!--  Stroke  -->
                        <ItemsControl Style="{StaticResource SubMenuItemsControlStyle}">
                            <TextBlock VerticalAlignment="Center" Text="Stroke" />
                            <Button
                                x:Name="SelectStrokeButton"
                                Background="{Binding SelectedStroke.Value}"
                                Click="SelectStrokeButton_Click"
                                Foreground="PaleGoldenrod"
                                Style="{StaticResource SubMenuButtonStyle}" />
                            <Popup
                                x:Name="StrokePopup"
                                AllowsTransparency="True"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=SelectStrokeButton}"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                <ItemsControl ItemsSource="{Binding PaletteColors}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Width="180" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <ItemContainerTemplate>
                                            <Border BorderBrush="Gray" BorderThickness="1">
                                                <Grid Width="15" Height="15">
                                                    <Button
                                                        x:Name="SelectStrokeInternalButton"
                                                        common:ClosePopupBehaviorService.CloseOnClick="True"
                                                        Background="{Binding Value}"
                                                        BorderThickness="0"
                                                        Click="SelectStrokeInternalButton_Click"
                                                        Cursor="Hand"
                                                        Style="{StaticResource ButtonStyle1}"
                                                        ToolTip="{Binding Key}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <i:InvokeCommandAction Command="{Binding Data.ChangeStrokeCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                </Grid>
                                            </Border>
                                        </ItemContainerTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Popup>
                        </ItemsControl>

                    </StackPanel>

                </StackPanel>

                <!--  Erase Mode Description  -->
                <ItemsControl>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Style>
                        <Style BasedOn="{StaticResource SubMenuItemsControlStyle}" TargetType="{x:Type ItemsControl}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedUXMode}" Value="{x:Static model:UXMode.Erase}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                    <TextBlock
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Center"
                        Text="Select a graph and press 'DELETE' key to erase it."
                        TextWrapping="Wrap" />
                </ItemsControl>
            </StackPanel>

        </StackPanel>
        <ScrollViewer Grid.RowSpan="2" Grid.Column="1">
            <Canvas x:Name="MyCanvas" Background="DarkGray">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction
                            Command="{Binding CanvasMouseLeftButtonDownCommand}"
                            EventArgsConverter="{StaticResource MouseButtonEventArgsToPointConverter}"
                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction
                            Command="{Binding CanvasMouseMoveCommand}"
                            EventArgsConverter="{StaticResource MouseButtonEventArgsToPointConverter}"
                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding CanvasMousLeftButtonUpCommand}"
                            EventArgsConverter="{StaticResource MouseButtonEventArgsToPointConverter}"
                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Canvas>
        </ScrollViewer>
    </Grid>
</Window>
